# Generated by Django 5.2.7 on 2025-10-04 10:36

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="DashboardWidget",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                (
                    "widget_type",
                    models.CharField(
                        choices=[
                            ("map", "Map Widget"),
                            ("chart", "Chart Widget"),
                            ("metric", "Metric Widget"),
                            ("alert_summary", "Alert Summary"),
                            ("weather_summary", "Weather Summary"),
                            ("risk_overview", "Risk Overview"),
                            ("farmer_stats", "Farmer Statistics"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "config_data",
                    models.TextField(
                        blank=True, help_text="JSON configuration for widget settings"
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                ("position_x", models.IntegerField(default=0)),
                ("position_y", models.IntegerField(default=0)),
                ("width", models.IntegerField(default=4)),
                ("height", models.IntegerField(default=3)),
                ("visible_to_admins", models.BooleanField(default=True)),
                ("visible_to_farmers", models.BooleanField(default=False)),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["position_y", "position_x"],
            },
        ),
        migrations.CreateModel(
            name="ReportTemplate",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
                ("description", models.TextField(blank=True)),
                (
                    "report_type",
                    models.CharField(
                        choices=[
                            ("drought_summary", "Drought Summary Report"),
                            ("farmer_impact", "Farmer Impact Report"),
                            ("regional_analysis", "Regional Analysis Report"),
                            ("alert_performance", "Alert Performance Report"),
                            ("seasonal_outlook", "Seasonal Outlook Report"),
                        ],
                        max_length=30,
                    ),
                ),
                ("template_file", models.CharField(blank=True, max_length=200)),
                (
                    "default_format",
                    models.CharField(
                        choices=[
                            ("pdf", "PDF"),
                            ("csv", "CSV"),
                            ("excel", "Excel"),
                            ("json", "JSON"),
                        ],
                        default="pdf",
                        max_length=10,
                    ),
                ),
                ("include_ndvi_data", models.BooleanField(default=True)),
                ("include_soil_moisture", models.BooleanField(default=True)),
                ("include_weather_data", models.BooleanField(default=True)),
                ("include_farmer_data", models.BooleanField(default=False)),
                ("include_alert_data", models.BooleanField(default=True)),
                ("can_be_scheduled", models.BooleanField(default=True)),
                (
                    "default_schedule_frequency",
                    models.CharField(
                        choices=[
                            ("daily", "Daily"),
                            ("weekly", "Weekly"),
                            ("monthly", "Monthly"),
                            ("quarterly", "Quarterly"),
                            ("on_demand", "On Demand Only"),
                        ],
                        default="on_demand",
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "ordering": ["report_type", "name"],
            },
        ),
        migrations.CreateModel(
            name="NotificationSettings",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("email_daily_summary", models.BooleanField(default=False)),
                ("email_weekly_report", models.BooleanField(default=False)),
                ("email_high_risk_alerts", models.BooleanField(default=True)),
                ("show_risk_level_changes", models.BooleanField(default=True)),
                ("show_new_data_available", models.BooleanField(default=True)),
                ("show_system_messages", models.BooleanField(default=True)),
                ("push_notifications_enabled", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="GeneratedReport",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_from", models.DateField()),
                ("date_to", models.DateField()),
                (
                    "file_format",
                    models.CharField(
                        choices=[
                            ("pdf", "PDF"),
                            ("csv", "CSV"),
                            ("excel", "Excel"),
                            ("json", "JSON"),
                        ],
                        max_length=10,
                    ),
                ),
                ("file_path", models.CharField(blank=True, max_length=500)),
                ("file_size_bytes", models.BigIntegerField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("generating", "Generating"),
                            ("completed", "Completed"),
                            ("failed", "Failed"),
                        ],
                        default="pending",
                        max_length=20,
                    ),
                ),
                ("error_message", models.TextField(blank=True)),
                ("report_title", models.CharField(max_length=200)),
                (
                    "report_parameters",
                    models.TextField(
                        blank=True, help_text="JSON parameters used for generation"
                    ),
                ),
                ("generation_started_at", models.DateTimeField(blank=True, null=True)),
                (
                    "generation_completed_at",
                    models.DateTimeField(blank=True, null=True),
                ),
                ("is_public", models.BooleanField(default=False)),
                ("download_count", models.IntegerField(default=0)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "generated_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "region_filter",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.region",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboard.reporttemplate",
                    ),
                ),
            ],
            options={
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="UserDashboard",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("layout_columns", models.IntegerField(default=12)),
                (
                    "theme",
                    models.CharField(
                        choices=[
                            ("light", "Light Theme"),
                            ("dark", "Dark Theme"),
                            ("green", "Green Theme"),
                        ],
                        default="green",
                        max_length=20,
                    ),
                ),
                (
                    "auto_refresh_interval",
                    models.IntegerField(
                        default=300, help_text="Auto-refresh interval in seconds"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "default_region",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="core.region",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserWidgetConfig",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("position_x", models.IntegerField()),
                ("position_y", models.IntegerField()),
                ("width", models.IntegerField()),
                ("height", models.IntegerField()),
                (
                    "user_config_data",
                    models.TextField(
                        blank=True,
                        help_text="User-specific JSON configuration overrides",
                    ),
                ),
                ("is_visible", models.BooleanField(default=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "user_dashboard",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboard.userdashboard",
                    ),
                ),
                (
                    "widget",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="dashboard.dashboardwidget",
                    ),
                ),
            ],
            options={
                "ordering": ["position_y", "position_x"],
                "unique_together": {("user_dashboard", "widget")},
            },
        ),
        migrations.AddField(
            model_name="userdashboard",
            name="widgets",
            field=models.ManyToManyField(
                blank=True,
                through="dashboard.UserWidgetConfig",
                to="dashboard.dashboardwidget",
            ),
        ),
    ]
